<?xml version="1.0" encoding="UTF-8"?>
<project name="ml-ant-http" default="dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- get Ivy -->
  <property name="ivy.version" value="2.4.0"/>
  <property name="ivy.jar" value=".ivy-${ivy.version}.jar"/>
  <target name="ivy:check-download">
    <available file="${ivy.jar}" property="ivy.jar.exist"/>
  </target>
  <target name="ivy:download" depends="ivy:check-download" unless="ivy.jar.exist">
    <get src="http://central.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar" dest="${ivy.jar}" usetimestamp="true"/>
  </target>
  <target name="ivy:init" depends="ivy:download">
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${ivy.jar}"/>
  </target>

  <property name="ml-ant-http.lib.dir" location="lib"/>
  <property name="ml-ant-http.src.dir" location="src"/>
  <property name="ml-ant-http.java.src.dir" location="${ml-ant-http.src.dir}/java"/>
  <property name="ml-ant-http.test.src.dir" location="${ml-ant-http.src.dir}/test"/>
  <property name="ml-ant-http.resources.dir" location="resources"/>
  <property name="ml-ant-http.build.dir" location="build"/>
  <property name="ml-ant-http.build.classes.dir" location="${ml-ant-http.build.dir}/classes"/>
  <property name="ml-ant-http.build.tests.dir" location="${ml-ant-http.build.dir}/tests"/>
  <property name="ml-ant-http.build.docs.dir" location="${ml-ant-http.build.dir}/docs"/>
  <property name="ml-ant-http.dist.dir" location="dist"/>
  <property name="ml-ant-http.license.file" value="license.txt"/>
  <property name="ml-ant-http.dist.jar.name" value="ml-ant-http"/>
  <property name="ml-ant-http.dist.jar.version" value="1.1.3"/>
  <property name="ml-ant-http.dist.jar.dir" location="${ml-ant-http.dist.dir}/${ml-ant-http.dist.jar.name}-${ml-ant-http.dist.jar.version}"/>
  <property name="ml-ant-http.dist.jar.bin" value="${ml-ant-http.dist.jar.dir}/${ml-ant-http.dist.jar.name}-${ml-ant-http.dist.jar.version}.jar"/>
  <property name="ml-ant-http.dist.jar.src" value="${ml-ant-http.dist.jar.dir}/${ml-ant-http.dist.jar.name}-${ml-ant-http.dist.jar.version}-sources.jar"/>
  <property name="ml-ant-http.dist.doc.zip" location="${ml-ant-http.dist.jar.dir}/${ml-ant-http.dist.jar.name}-${ml-ant-http.dist.jar.version}-api.zip"/>

  <target name="clean">
    <delete dir="${ml-ant-http.build.dir}"/>
    <delete dir="${ml-ant-http.dist.dir}"/>
  </target>

  <target name="init">
    <mkdir dir="${ml-ant-http.build.dir}"/>
    <mkdir dir="${ml-ant-http.build.classes.dir}"/>
    <mkdir dir="${ml-ant-http.build.tests.dir}"/>
    <mkdir dir="${ml-ant-http.build.docs.dir}"/>
    <mkdir dir="${ml-ant-http.dist.dir}"/>
    <mkdir dir="${ml-ant-http.dist.jar.dir}"/>
  </target>

  <target name="ivy:resolve" depends="ivy:init">
    <ivy:resolve file="ivy.xml" />
    <ivy:cachepath pathid="compile.classpath" conf="compile" type="jar"/>
    <ivy:cachepath pathid="test.classpath" conf="test" type="jar"/>
  </target>

  <target name="compile" depends="init,ivy:resolve">
    <javac source="1.5" target="1.5" debug="yes" destdir="${ml-ant-http.build.classes.dir}" includeantruntime="false">
      <src path="${ml-ant-http.java.src.dir}"/>
      <classpath refid="compile.classpath" />
    </javac>
    <javac source="1.5" target="1.5" debug="yes" destdir="${ml-ant-http.build.tests.dir}" includeantruntime="false">
      <src path="${ml-ant-http.test.src.dir}"/>
      <classpath>
        <pathelement path="${ml-ant-http.build.classes.dir}"/>
        <path refid="test.classpath"/>
      </classpath>
    </javac>
    <copy todir="${ml-ant-http.build.tests.dir}">
      <fileset dir="${ml-ant-http.resources.dir}"/>
     </copy>
  </target>

  <target name="jar" depends="compile">
    <jar destfile="${ml-ant-http.dist.jar.bin}" basedir="${ml-ant-http.build.classes.dir}">
      <metainf file="${ml-ant-http.license.file}"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
      </manifest>
    </jar>
  </target>

  <target name="jar.src" depends="compile">
    <jar destfile="${ml-ant-http.dist.jar.src}" basedir="${ml-ant-http.java.src.dir}">
      <metainf file="${ml-ant-http.license.file}"/>
      <manifest>">
        <attribute name="Built-By" value="${user.name}"/>
      </manifest>
    </jar>
  </target>

  <target name="test" depends="jar">
    <junit printsummary="yes" haltonfailure="yes">
      <formatter type="plain" usefile="false"/>
      <classpath>
        <pathelement location="${ml-ant-http.build.tests.dir}"/>
        <pathelement location="${ml-ant-http.dist.jar.bin}"/>
        <path refid="test.classpath"/>
      </classpath>
      <batchtest fork="yes">
        <fileset dir="${ml-ant-http.test.src.dir}">
            <include name="**/*Test.java"/>
            <exclude name="**/Abstract*"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="javadoc" depends="init">
    <javadoc destdir="${ml-ant-http.build.docs.dir}" author="true" version="true" use="true" windowtitle="missing link ant http task ${ml-ant-http.dist.jar.version}">

      <packageset dir="${ml-ant-http.java.src.dir}" defaultexcludes="yes">
        <include name="org/missinglink/**"/>
      </packageset>

      <doctitle><![CDATA[<h1>missing link ant http task ${ml-ant-http.dist.jar.version}</h1>]]></doctitle>
      <bottom><![CDATA[<i>missing link ant http task ${ml-ant-http.dist.jar.version}</i>]]></bottom>
      <tag name="todo" scope="all" description="To do:"/>
      <link href="http://download.oracle.com/javase/6/docs/api/"/>
    </javadoc>

    <zip destfile="${ml-ant-http.dist.doc.zip}" basedir="${ml-ant-http.build.docs.dir}"/>
  </target>

  <target name="copy.dist.files" depends="compile">
    <copy filtering="false" flatten="false" todir="${ml-ant-http.dist.jar.dir}" file="${ml-ant-http.license.file}"/>
    <filter token="ml-ant-http-version" value="${ml-ant-http.dist.jar.version}"/>
    <copy filtering="true" flatten="true" todir="${ml-ant-http.dist.jar.dir}" file="${ml-ant-http.resources.dir}/build-sample.xml"/>
  </target>

  <target name="dist" depends="compile,jar,jar.src,copy.dist.files,javadoc">
    <zip destfile="${ml-ant-http.dist.dir}/${ml-ant-http.dist.jar.name}-${ml-ant-http.dist.jar.version}.zip" basedir="${ml-ant-http.dist.jar.dir}"/>
  </target>

</project>
